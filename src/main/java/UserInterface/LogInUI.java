package UserInterface;

import AdminInterface.AdminMain;
import Database.DataBase;
import UserInterface.Notes.NotesController;

import javax.swing.*;
import java.sql.Connection;
import java.sql.SQLException;

public class LogInUI extends javax.swing.JFrame {
    public String UserIDStudent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdminIDLabel;
    private javax.swing.JTextField AdminIDTextField;
    private javax.swing.JLabel AdminLogInLabel;
    private javax.swing.JPasswordField AdminPasswordField;
    private javax.swing.JLabel AdminPaswordLabel;
    private javax.swing.JButton LogInAdminButton;
    private javax.swing.JLabel LogInLabel;
    private javax.swing.JButton LogInStudentsButton;
    private javax.swing.JLabel PaswordLabel;
    private javax.swing.JLabel StudentLogInLabel;
    private javax.swing.JPasswordField StudentsPasswordField1;
    private javax.swing.JLabel UserIDLabel;
    private javax.swing.JTextField UserIDTextField;
    /**
     * Creates new form LogInUI
     */

    public LogInUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.setResizable(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogInUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogInUI().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogInLabel = new javax.swing.JLabel();
        AdminLogInLabel = new javax.swing.JLabel();
        StudentLogInLabel = new javax.swing.JLabel();
        UserIDLabel = new javax.swing.JLabel();
        PaswordLabel = new javax.swing.JLabel();
        UserIDTextField = new javax.swing.JTextField();
        AdminPasswordField = new javax.swing.JPasswordField();
        AdminIDLabel = new javax.swing.JLabel();
        AdminPaswordLabel = new javax.swing.JLabel();
        AdminIDTextField = new javax.swing.JTextField();
        StudentsPasswordField1 = new javax.swing.JPasswordField();
        LogInStudentsButton = new javax.swing.JButton();
        LogInAdminButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LogInLabel.setFont(new java.awt.Font("Tiger", 1, 80)); // NOI18N
        LogInLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LogInLabel.setText("e-Alfaisal");
        LogInLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AdminLogInLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        AdminLogInLabel.setText("Admin Log In");

        StudentLogInLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        StudentLogInLabel.setText("Student Log In");

        UserIDLabel.setFont(new java.awt.Font("Tiger", 2, 18)); // NOI18N
        UserIDLabel.setText("UserID:");

        PaswordLabel.setFont(new java.awt.Font("Tiger", 2, 18)); // NOI18N
        PaswordLabel.setText("Password: ");

        UserIDTextField.setText("Enter UserID");

        AdminPasswordField.setText("jPasswordField1");

        AdminIDLabel.setFont(new java.awt.Font("Tiger", 2, 18)); // NOI18N
        AdminIDLabel.setText("UserID:");

        AdminPaswordLabel.setFont(new java.awt.Font("Tiger", 2, 18)); // NOI18N
        AdminPaswordLabel.setText("Password: ");

        AdminIDTextField.setText("Enter UserID");

        StudentsPasswordField1.setText("jPasswordField1");

        LogInStudentsButton.setText("Log In");
        LogInStudentsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogInStudentsButtonMouseClicked(evt);
            }
        });

        LogInAdminButton.setText("Log In");
        LogInAdminButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogInAdminButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(StudentLogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AdminLogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(181, 181, 181)
                                                .addComponent(LogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(52, 52, 52)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(UserIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(PaswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(LogInStudentsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(StudentsPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                                        .addComponent(UserIDTextField))
                                                .addGap(177, 177, 177)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(AdminIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(AdminPaswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(AdminIDTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                                        .addComponent(AdminPasswordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                                        .addComponent(LogInAdminButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(StudentLogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(AdminLogInLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(UserIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(UserIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(AdminIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(AdminIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(PaswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(StudentsPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(AdminPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(AdminPaswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LogInAdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LogInStudentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogInStudentsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogInStudentsButtonMouseClicked
        try {
            // get the values entered in the UserIDTextFieldStudents and PasswordFieldStudents components
            UserIDStudent = UserIDTextField.getText();
            String PasswordStudent = new String(StudentsPasswordField1.getPassword());
            Connection connection = DataBase.getConnection();
            /* getUserPassword - This method takes in the userId and a database connection as parameters and returns the
             * password associated with the userId. It creates a statement and executes a query to get the password from
             * the database. If the query returns a result, the method returns the password, otherwise it throws a SQLException.  */

            /* getUserIDPassword - This method takes in the userId, database connection, and password as parameters. It creates a statement
             * and executes a query to check if the userId and password match with the values stored in the database. If the query returns
             * a result, the method returns true, otherwise it returns false. */
            Boolean userFound = DataBase.getUserIDPassword(UserIDStudent, connection, PasswordStudent);
            if (UserIDStudent.equals(null) || UserIDStudent == "") {
                NotesController Noinput = new UserInterface.Notes.NotesController();
                Noinput.initialize();
                Controllers.Dialogues.showMessage("please enter a userID and/or Password");
                //UserInterface.Notes.NotesController.dialogues.output("please enter a userID and/or Password");
            } else if (userFound) {
                JFrame frame = new MainMenuUI();
                frame.setVisible(true);
                this.setVisible(false);
                DataStructures.UserSession.setUserID(UserIDStudent);

            } else {
                Controllers.Dialogues.showMessage("You have entered the Incorrect UserID/Password, please enter them again");

                //    UserInterface.Notes.NotesController.dialogues.output(
                //       "You have entered the wrong Username/password, please enter the correct ones");
            }
        } catch (SQLException ex) {
            Controllers.Dialogues.showMessage("Error logging in");
        }


    }//GEN-LAST:event_LogInStudentsButtonMouseClicked

    private void LogInAdminButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogInAdminButtonMouseClicked
        if (AdminIDTextField.getText() == null || AdminPasswordField.getPassword() == null) {
            // output a dialogue to enter the adminID and password
            Controllers.Dialogues.showMessage("please enter a userID and/or Password");
        }
        // get the values entered in the UserIdTextFieldAdmin and PasswordFieldAdmin components
        String AdminID = new String(AdminIDTextField.getText());
        String AdminPassword = new String(AdminPasswordField.getPassword());

        // check if the entered values match the hardcoded adminID and password
        if (AdminIDTextField.getText().equals("11201400131") || AdminPasswordField.getPassword().equals("123456")) {
            JFrame frame = new AdminMain();
            frame.setVisible(true);
            this.setVisible(false);
        }
        // if the values don't match
        else {
            // output a dialogue to enter the correct adminID and password
            Controllers.Dialogues.showMessage("You have entered the Incorrect AdminID/Password, please enter them again");
        }

    }//GEN-LAST:event_LogInAdminButtonMouseClicked
    // End of variables declaration//GEN-END:variables


}
