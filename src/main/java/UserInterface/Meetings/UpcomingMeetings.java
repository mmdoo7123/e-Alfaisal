package UserInterface.Meetings;


import javax.swing.*;
import java.sql.*;
import java.time.LocalDate;
import java.util.Date;

//Link this with the posting assignments
public class UpcomingMeetings extends javax.swing.JFrame {
    // Variables declaration - do not modify                     
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel UpcomingMeetingsMessage;
    private java.awt.List meetingsList;

    /**
     * Creates new form UpcomingMeetings
     */

    public UpcomingMeetings() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(false);
        this.setResizable(false);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpcomingMeetings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpcomingMeetings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpcomingMeetings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpcomingMeetings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpcomingMeetings().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UpcomingMeetingsMessage = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        meetingsList = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        UpcomingMeetingsMessage.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        UpcomingMeetingsMessage.setText("Here are your upcoming meetings");

        BackButton.setText("Back");
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(meetingsList, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(UpcomingMeetingsMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(UpcomingMeetingsMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(meetingsList, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        JFrame frame = new MeetingsUI();
        frame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BackButtonMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;
        System.out.print("window opened");
        try {
            // Get today's current date
            LocalDate currentDate = LocalDate.now();

            // Connect to the database
            connection = DriverManager.getConnection(
"jdbc:postgresql://localhost:5432/postgres?currentSchema=scheduling_users", "postgres", "postgres");

            // Define the SQL statement to retrieve the "meetingdate" and "name" columns where the userid, status, and meeting date are appropriate
            String sql = "SELECT meetingdate, studentid, name FROM scheduling.studentmeetings JOIN scheduling.scheduling_users ON studentmeetings.studentid = scheduling_users.id WHERE studentmeetings.status = 2 AND studentid = ? AND meetingdate > ?";
            String UserID = DataStructures.UserSession.getUserID();
            // Prepare the SQL statement with the user ID and current date
            statement = connection.prepareStatement(sql);
            statement.setString(1, UserID);
            statement.setDate(2, java.sql.Date.valueOf(currentDate));

            // Execute the SQL statement
            resultSet = statement.executeQuery();

            while (resultSet.next()) {
                Date date = resultSet.getDate("meetingdate");
                String name = resultSet.getString("name");
                meetingsList.add(name + " " + date);
            }

        } catch (SQLException ex) {
            Controllers.Dialogues.showMessage("Error occured while opening the window");

        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                Controllers.Dialogues.showMessage("Error occured while opening the window");
            }
        }
    }
    // End of variables declaration                   
}
